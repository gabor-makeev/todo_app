{"remainingRequest":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\src\\App.vue","mtime":1624186362736},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ29uc29sZSBmcm9tICdAL2NvbXBvbmVudHMvQ29uc29sZSc7CmltcG9ydCBUb2RvVUkgZnJvbSAnQC9jb21wb25lbnRzL1RvZG9VSSc7CmltcG9ydCBUb2RvIGZyb20gJ0AvY29tcG9uZW50cy9Ub2RvJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENvbnNvbGU6IENvbnNvbGUsCiAgICBUb2RvVUk6IFRvZG9VSSwKICAgIFRvZG86IFRvZG8KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YXNrTGlzdDogW10sCiAgICAgIG9yaWdpbmFsTGlzdDogW10sCiAgICAgIGNvbnNvbGU6IFtdLAogICAgICB1bmlxdWVUYXNrczogMCwKICAgICAgQVBJX1VSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRUYXNrTGlzdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgbWFrZUdFVFJlcXVlc3Q6IGZ1bmN0aW9uIG1ha2VHRVRSZXF1ZXN0KHVybCkgewogICAgICByZXR1cm4gZmV0Y2godXJsKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIGRhdGEuanNvbigpOwogICAgICB9KTsKICAgIH0sCiAgICBtYWtlUE9TVFJlcXVlc3Q6IGZ1bmN0aW9uIG1ha2VQT1NUUmVxdWVzdCh1cmwsIGRhdGEpIHsKICAgICAgcmV0dXJuIGZldGNoKHVybCwgewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICB9LAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gZGF0YS5qc29uKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFRhc2tMaXN0OiBmdW5jdGlvbiBnZXRUYXNrTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubWFrZUdFVFJlcXVlc3QoIiIuY29uY2F0KHRoaXMuQVBJX1VSTCwgIi90YXNrTGlzdCIpKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgX3RoaXMudGFza0xpc3QgPSBkYXRhOwogICAgICAgIF90aGlzLm9yaWdpbmFsTGlzdCA9IGRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIGNyZWF0ZVRhc2s6IGZ1bmN0aW9uIGNyZWF0ZVRhc2sodGFzaywgdGFza1ByaW9yaXR5KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRhc2subGVuZ3RoKSB7CiAgICAgICAgdGhpcy5tYWtlUE9TVFJlcXVlc3QoIiIuY29uY2F0KHRoaXMuQVBJX1VSTCwgIi9hZGRUYXNrIiksIHsKICAgICAgICAgIHRleHQ6IHRhc2ssCiAgICAgICAgICBudW1iZXI6IHRoaXMudGFza0xpc3QubGVuZ3RoICsgMSwKICAgICAgICAgIHNlbGVjdGlvblN0YXRlOiBmYWxzZSwKICAgICAgICAgIGNvbXBsZXRpb25TdGF0ZTogZmFsc2UsCiAgICAgICAgICBwcmlvcml0eTogdGFza1ByaW9yaXR5CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczIuZ2V0VGFza0xpc3QoKTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLnVuaXF1ZVRhc2tzKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jb25zb2xlLnB1c2goewogICAgICAgICAgbWVzc2FnZTogJ05vdCB2YWxpZCB2YWx1ZSBlbnRlcmVkJywKICAgICAgICAgIG51bWJlcjogdGhpcy5jb25zb2xlLmxlbmd0aAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgcmVtb3ZlVGFzazogZnVuY3Rpb24gcmVtb3ZlVGFzayh0YXNrKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5tYWtlUE9TVFJlcXVlc3QoIiIuY29uY2F0KHRoaXMuQVBJX1VSTCwgIi9yZW1vdmVUYXNrIiksIHRhc2spLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMy5nZXRUYXNrTGlzdCgpOwogICAgICB9KTsKICAgIH0sCiAgICByZXNldFRPRE86IGZ1bmN0aW9uIHJlc2V0VE9ETygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLm1ha2VQT1NUUmVxdWVzdCgiIi5jb25jYXQodGhpcy5BUElfVVJMLCAiL1Jlc2V0VE9ET0FwcCIpKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczQuZ2V0VGFza0xpc3QoKTsKICAgICAgfSk7CiAgICB9LAogICAgdG9nZ2xlQ29tcGxldGlvblN0YXRlOiBmdW5jdGlvbiB0b2dnbGVDb21wbGV0aW9uU3RhdGUodGFzaykgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHRoaXMubWFrZVBPU1RSZXF1ZXN0KCIiLmNvbmNhdCh0aGlzLkFQSV9VUkwsICIvdG9nZ2xlQ29tcGxldGlvbiIpLCB0YXNrKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczUuZ2V0VGFza0xpc3QoKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlQ29tcGxldGVkVGFza3M6IGZ1bmN0aW9uIHJlbW92ZUNvbXBsZXRlZFRhc2tzKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHRoaXMubWFrZVBPU1RSZXF1ZXN0KCIiLmNvbmNhdCh0aGlzLkFQSV9VUkwsICIvcmVtb3ZlQ29tcGxldGVkVGFza3MiKSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM2LmdldFRhc2tMaXN0KCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFNlbGVjdGVkVGFza3NJRHM6IGZ1bmN0aW9uIGdldFNlbGVjdGVkVGFza3NJRHMoKSB7CiAgICAgIHZhciBzZWxlY3RlZFRhc2tzSURzID0gW107CiAgICAgIHRoaXMudGFza0xpc3QuZm9yRWFjaChmdW5jdGlvbiAodGFzaykgewogICAgICAgIGlmICh0YXNrLnNlbGVjdGlvblN0YXRlKSB7CiAgICAgICAgICBzZWxlY3RlZFRhc2tzSURzLnB1c2godGFzay5pZCk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIHNlbGVjdGVkVGFza3NJRHM7CiAgICB9LAogICAgcmVtb3ZlU2VsZWN0ZWRUYXNrczogZnVuY3Rpb24gcmVtb3ZlU2VsZWN0ZWRUYXNrcygpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CgogICAgICB0aGlzLm1ha2VQT1NUUmVxdWVzdCgiIi5jb25jYXQodGhpcy5BUElfVVJMLCAiL3JlbW92ZVNlbGVjdGVkVGFza3MiKSwgdGhpcy5nZXRTZWxlY3RlZFRhc2tzSURzKCkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNy5nZXRUYXNrTGlzdCgpOwogICAgICB9KTsKICAgIH0sCiAgICBjbGVhclRhc2tMaXN0OiBmdW5jdGlvbiBjbGVhclRhc2tMaXN0KCkgewogICAgICB2YXIgX3RoaXM4ID0gdGhpczsKCiAgICAgIHRoaXMubWFrZVBPU1RSZXF1ZXN0KCIiLmNvbmNhdCh0aGlzLkFQSV9VUkwsICIvcmVtb3ZlQWxsVGFza3MiKSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM4LmdldFRhc2tMaXN0KCk7CiAgICAgIH0pOwogICAgfSwKICAgIGZpbHRlckxpc3Q6IGZ1bmN0aW9uIGZpbHRlckxpc3Qob3B0aW9uKSB7CiAgICAgIGlmIChvcHRpb24gPT09ICdBbGwnKSB7CiAgICAgICAgdGhpcy5nZXRUYXNrTGlzdCgpOwogICAgICB9IGVsc2UgaWYgKG9wdGlvbiA9PT0gJ0NvbXBsZXRlZCcpIHsKICAgICAgICB0aGlzLnRhc2tMaXN0ID0gdGhpcy5vcmlnaW5hbExpc3QuZmlsdGVyKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICByZXR1cm4gdGFzay5jb21wbGV0aW9uU3RhdGU7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAob3B0aW9uID09PSAnV2l0aG91dCBQcmlvcml0eScpIHsKICAgICAgICB0aGlzLnRhc2tMaXN0ID0gdGhpcy5vcmlnaW5hbExpc3QuZmlsdGVyKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICByZXR1cm4gdGFzay5wcmlvcml0eSA9PT0gMDsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRhc2tMaXN0ID0gdGhpcy5vcmlnaW5hbExpc3QuZmlsdGVyKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICByZXR1cm4gdGFzay5wcmlvcml0eSA9PT0gb3B0aW9uOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgc29ydExpc3Q6IGZ1bmN0aW9uIHNvcnRMaXN0KG9wdGlvbikgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKCiAgICAgIHZhciBwcmlvcml0aWVzQXJyYXkgPSBbJ0hpZ2gnLCAnTm9ybWFsJywgJ0xvdycsIDBdOwogICAgICB0aGlzLnRhc2tMaXN0ID0gW107CgogICAgICBpZiAob3B0aW9uID09PSAnRGVmYXVsdCcpIHsKICAgICAgICB0aGlzLmdldFRhc2tMaXN0KCk7CiAgICAgIH0gZWxzZSBpZiAob3B0aW9uID09PSAnSGlnaExvdycpIHsKICAgICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChwcmlvcml0eSkgewogICAgICAgICAgX3RoaXM5Lm9yaWdpbmFsTGlzdC5mb3JFYWNoKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICAgIGlmICh0YXNrLnByaW9yaXR5ID09PSBwcmlvcml0aWVzQXJyYXlbcHJpb3JpdHldKSB7CiAgICAgICAgICAgICAgX3RoaXM5LnRhc2tMaXN0LnB1c2godGFzayk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH07CgogICAgICAgIGZvciAodmFyIHByaW9yaXR5ID0gMDsgcHJpb3JpdHkgPD0gcHJpb3JpdGllc0FycmF5Lmxlbmd0aDsgcHJpb3JpdHkrKykgewogICAgICAgICAgX2xvb3AocHJpb3JpdHkpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgX2xvb3AyID0gZnVuY3Rpb24gX2xvb3AyKF9wcmlvcml0eSkgewogICAgICAgICAgX3RoaXM5Lm9yaWdpbmFsTGlzdC5mb3JFYWNoKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICAgIGlmICh0YXNrLnByaW9yaXR5ID09PSBwcmlvcml0aWVzQXJyYXlbX3ByaW9yaXR5XSkgewogICAgICAgICAgICAgIF90aGlzOS50YXNrTGlzdC5wdXNoKHRhc2spOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9OwoKICAgICAgICBmb3IgKHZhciBfcHJpb3JpdHkgPSBwcmlvcml0aWVzQXJyYXkubGVuZ3RoIC0gMTsgX3ByaW9yaXR5ID49IDA7IF9wcmlvcml0eS0tKSB7CiAgICAgICAgICBfbG9vcDIoX3ByaW9yaXR5KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"wrapper\">\n      <Console :taskIndex=\"uniqueTasks\" :console=\"console\" />\n      <Todo :console=\"console\" :taskList=\"taskList\" :createTask=\"createTask\" @remove-task=\"removeTask\" :toggleCompletionState=\"toggleCompletionState\" />\n      <TodoUI @clear-task-list=\"clearTaskList\" @reset-TODO=\"resetTODO\" @remove-completed-tasks=\"removeCompletedTasks\" @remove-selected-tasks=\"removeSelectedTasks\" @filter-list=\"filterList\" @sort-list=\"sortList\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Console from '@/components/Console'\nimport TodoUI from '@/components/TodoUI'\nimport Todo from '@/components/Todo'\nexport default {\n  components: {\n    Console,\n    TodoUI,\n    Todo\n  },\n  data: () => ({\n    taskList: [],\n    originalList: [],\n    console: [],\n    uniqueTasks: 0,\n    API_URL: 'http://localhost:3000'\n  }),\n  mounted () {\n    this.getTaskList()\n  },\n  methods: {\n    makeGETRequest (url) {\n      return fetch(url)\n        .then((data) => {\n          return data.json()\n        })\n    },\n    makePOSTRequest (url, data) {\n      return fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n        .then((data) => {\n          return data.json()\n        })\n    },\n    getTaskList () {\n      this.makeGETRequest(`${this.API_URL}/taskList`)\n        .then((data) => {\n          this.taskList = data\n          this.originalList = data\n        })\n    },\n    createTask (task, taskPriority) {\n      if (task.length) {\n        this.makePOSTRequest(`${this.API_URL}/addTask`, { text: task, number: this.taskList.length + 1, selectionState: false, completionState: false, priority: taskPriority })\n          .then(() => {\n            this.getTaskList()\n          })\n        this.uniqueTasks++\n      } else {\n        this.console.push({ message: 'Not valid value entered', number: this.console.length })\n      }\n    },\n    removeTask (task) {\n      this.makePOSTRequest(`${this.API_URL}/removeTask`, task)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    resetTODO () {\n      this.makePOSTRequest(`${this.API_URL}/ResetTODOApp`)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    toggleCompletionState (task) {\n      this.makePOSTRequest(`${this.API_URL}/toggleCompletion`, task)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    removeCompletedTasks () {\n      this.makePOSTRequest(`${this.API_URL}/removeCompletedTasks`)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    getSelectedTasksIDs () {\n      const selectedTasksIDs = []\n      this.taskList.forEach(task => {\n        if (task.selectionState) {\n          selectedTasksIDs.push(task.id)\n        }\n      })\n      return selectedTasksIDs\n    },\n    removeSelectedTasks () {\n      this.makePOSTRequest(`${this.API_URL}/removeSelectedTasks`, this.getSelectedTasksIDs())\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    clearTaskList () {\n      this.makePOSTRequest(`${this.API_URL}/removeAllTasks`)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    filterList (option) {\n      if (option === 'All') {\n        this.getTaskList()\n      } else if (option === 'Completed') {\n        this.taskList = this.originalList.filter(task => task.completionState)\n      } else if (option === 'Without Priority') {\n        this.taskList = this.originalList.filter(task => task.priority === 0)\n      } else {\n        this.taskList = this.originalList.filter(task => task.priority === option)\n      }\n    },\n    sortList (option) {\n      const prioritiesArray = ['High', 'Normal', 'Low', 0]\n      this.taskList = []\n      if (option === 'Default') {\n        this.getTaskList()\n      } else if (option === 'HighLow') {\n        for (let priority = 0; priority <= prioritiesArray.length; priority++) {\n          this.originalList.forEach(task => {\n            if (task.priority === prioritiesArray[priority]) {\n              this.taskList.push(task)\n            }\n          })\n        }\n      } else {\n        for (let priority = prioritiesArray.length - 1; priority >= 0; priority--) {\n          this.originalList.forEach(task => {\n            if (task.priority === prioritiesArray[priority]) {\n              this.taskList.push(task)\n            }\n          })\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@200;300;400;500;600;700;800;900&display=swap');\n@import 'assets/_variables.scss';\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Inconsolata', monospace;\n  background-color: #000000;\n}\n\n#app {\n  position: relative;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n}\n\n.wrapper {\n  width: 1140px;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  padding: 20px 0;\n}\n\n</style>\n"],"sourceRoot":"src"}]}