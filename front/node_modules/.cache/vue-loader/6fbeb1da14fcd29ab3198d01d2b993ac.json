{"remainingRequest":"C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\src\\components\\Todo.vue?vue&type=template&id=ee48fd14&scoped=true&","dependencies":[{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\src\\components\\Todo.vue","mtime":1627935122894},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\projects\\todo_app\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}