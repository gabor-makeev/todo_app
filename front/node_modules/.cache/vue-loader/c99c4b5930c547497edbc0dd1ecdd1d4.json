{"remainingRequest":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\src\\App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\src\\App.vue","mtime":1624186362736},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gabor Makeyev\\Desktop\\GeekBrains\\Первая четверть. Продвинутый курс Javascript\\geekbrains-js2-todo-vue\\todo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUluY29uc29sYXRhOndnaHRAMjAwOzMwMDs0MDA7NTAwOzYwMDs3MDA7ODAwOzkwMCZkaXNwbGF5PXN3YXAnKTsKQGltcG9ydCAnYXNzZXRzL192YXJpYWJsZXMuc2Nzcyc7CiogewogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCmJvZHkgewogIGZvbnQtZmFtaWx5OiAnSW5jb25zb2xhdGEnLCBtb25vc3BhY2U7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDsKfQoKI2FwcCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG1pbi1oZWlnaHQ6IDEwMHZoOwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KCi53cmFwcGVyIHsKICB3aWR0aDogMTE0MHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBwYWRkaW5nOiAyMHB4IDA7Cn0KCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"wrapper\">\n      <Console :taskIndex=\"uniqueTasks\" :console=\"console\" />\n      <Todo :console=\"console\" :taskList=\"taskList\" :createTask=\"createTask\" @remove-task=\"removeTask\" :toggleCompletionState=\"toggleCompletionState\" />\n      <TodoUI @clear-task-list=\"clearTaskList\" @reset-TODO=\"resetTODO\" @remove-completed-tasks=\"removeCompletedTasks\" @remove-selected-tasks=\"removeSelectedTasks\" @filter-list=\"filterList\" @sort-list=\"sortList\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Console from '@/components/Console'\nimport TodoUI from '@/components/TodoUI'\nimport Todo from '@/components/Todo'\nexport default {\n  components: {\n    Console,\n    TodoUI,\n    Todo\n  },\n  data: () => ({\n    taskList: [],\n    originalList: [],\n    console: [],\n    uniqueTasks: 0,\n    API_URL: 'http://localhost:3000'\n  }),\n  mounted () {\n    this.getTaskList()\n  },\n  methods: {\n    makeGETRequest (url) {\n      return fetch(url)\n        .then((data) => {\n          return data.json()\n        })\n    },\n    makePOSTRequest (url, data) {\n      return fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n        .then((data) => {\n          return data.json()\n        })\n    },\n    getTaskList () {\n      this.makeGETRequest(`${this.API_URL}/taskList`)\n        .then((data) => {\n          this.taskList = data\n          this.originalList = data\n        })\n    },\n    createTask (task, taskPriority) {\n      if (task.length) {\n        this.makePOSTRequest(`${this.API_URL}/addTask`, { text: task, number: this.taskList.length + 1, selectionState: false, completionState: false, priority: taskPriority })\n          .then(() => {\n            this.getTaskList()\n          })\n        this.uniqueTasks++\n      } else {\n        this.console.push({ message: 'Not valid value entered', number: this.console.length })\n      }\n    },\n    removeTask (task) {\n      this.makePOSTRequest(`${this.API_URL}/removeTask`, task)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    resetTODO () {\n      this.makePOSTRequest(`${this.API_URL}/ResetTODOApp`)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    toggleCompletionState (task) {\n      this.makePOSTRequest(`${this.API_URL}/toggleCompletion`, task)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    removeCompletedTasks () {\n      this.makePOSTRequest(`${this.API_URL}/removeCompletedTasks`)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    getSelectedTasksIDs () {\n      const selectedTasksIDs = []\n      this.taskList.forEach(task => {\n        if (task.selectionState) {\n          selectedTasksIDs.push(task.id)\n        }\n      })\n      return selectedTasksIDs\n    },\n    removeSelectedTasks () {\n      this.makePOSTRequest(`${this.API_URL}/removeSelectedTasks`, this.getSelectedTasksIDs())\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    clearTaskList () {\n      this.makePOSTRequest(`${this.API_URL}/removeAllTasks`)\n        .then(() => {\n          this.getTaskList()\n        })\n    },\n    filterList (option) {\n      if (option === 'All') {\n        this.getTaskList()\n      } else if (option === 'Completed') {\n        this.taskList = this.originalList.filter(task => task.completionState)\n      } else if (option === 'Without Priority') {\n        this.taskList = this.originalList.filter(task => task.priority === 0)\n      } else {\n        this.taskList = this.originalList.filter(task => task.priority === option)\n      }\n    },\n    sortList (option) {\n      const prioritiesArray = ['High', 'Normal', 'Low', 0]\n      this.taskList = []\n      if (option === 'Default') {\n        this.getTaskList()\n      } else if (option === 'HighLow') {\n        for (let priority = 0; priority <= prioritiesArray.length; priority++) {\n          this.originalList.forEach(task => {\n            if (task.priority === prioritiesArray[priority]) {\n              this.taskList.push(task)\n            }\n          })\n        }\n      } else {\n        for (let priority = prioritiesArray.length - 1; priority >= 0; priority--) {\n          this.originalList.forEach(task => {\n            if (task.priority === prioritiesArray[priority]) {\n              this.taskList.push(task)\n            }\n          })\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@200;300;400;500;600;700;800;900&display=swap');\n@import 'assets/_variables.scss';\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Inconsolata', monospace;\n  background-color: #000000;\n}\n\n#app {\n  position: relative;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n}\n\n.wrapper {\n  width: 1140px;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  padding: 20px 0;\n}\n\n</style>\n"]}]}